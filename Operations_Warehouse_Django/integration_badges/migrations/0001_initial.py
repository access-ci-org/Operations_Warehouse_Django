# Generated by Django 5.0.14 on 2025-04-23 21:35

import django.db.models.deletion
import integration_badges.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('badge_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('graphic', models.ImageField(blank=True, null=True, storage=integration_badges.models.DatabaseFileStorage, upload_to='')),
                ('researcher_summary', models.TextField(blank=True, null=True)),
                ('resource_provider_summary', models.TextField(blank=True, null=True)),
                ('verification_summary', models.TextField(blank=True, null=True)),
                ('verification_method', models.CharField(max_length=20)),
                ('default_badge_access_url', models.URLField(blank=True, null=True)),
                ('default_badge_access_url_label', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DatabaseFile',
            fields=[
                ('file_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=100, null=True)),
                ('file_data', models.BinaryField(editable=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Roadmap',
            fields=[
                ('roadmap_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('graphic', models.ImageField(null=True, storage=integration_badges.models.DatabaseFileStorage, upload_to='')),
                ('executive_summary', models.TextField(blank=True, null=True)),
                ('infrastructure_types', models.CharField(max_length=200)),
                ('integration_coordinators', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('technical_summary', models.TextField(blank=True, null=True)),
                ('implementor_roles', models.CharField(max_length=200)),
                ('task_experts', models.CharField(max_length=200)),
                ('detailed_instructions_url', models.URLField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Resource_Badge_Workflow',
            fields=[
                ('workflow_id', models.AutoField(primary_key=True, serialize=False)),
                ('info_resourceid', models.CharField(max_length=40)),
                ('status', models.CharField(choices=[('not-planned', 'Not Planned'), ('planned', 'Planned'), ('task-completed', 'Task Completed'), ('verification-failed', 'Verification Failed'), ('verified', 'Verified'), ('deprecated', 'Depredated')], max_length=20)),
                ('status_updated_by', models.CharField(max_length=50)),
                ('status_updated_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.badge')),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_workflow_resource_set', related_query_name='badge_workflow_resource_ref', to='integration_badges.roadmap')),
            ],
        ),
        migrations.CreateModel(
            name='Resource_Badge_Task_Workflow',
            fields=[
                ('workflow_id', models.AutoField(primary_key=True, serialize=False)),
                ('info_resourceid', models.CharField(max_length=40)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('not-completed', 'Not Completed')], max_length=20)),
                ('status_updated_by', models.CharField(max_length=50)),
                ('status_updated_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.badge')),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.roadmap')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.task')),
            ],
        ),
        migrations.CreateModel(
            name='Badge_Prerequisite_Badge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence_no', models.IntegerField()),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_prerequisites', to='integration_badges.badge')),
                ('prerequisite_badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_required_by', to='integration_badges.badge')),
            ],
            options={
                'unique_together': {('badge', 'prerequisite_badge')},
            },
        ),
        migrations.CreateModel(
            name='Resource_Roadmap',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('info_resourceid', models.CharField(max_length=40)),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.roadmap')),
            ],
            options={
                'unique_together': {('info_resourceid', 'roadmap')},
            },
        ),
        migrations.CreateModel(
            name='Resource_Badge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('info_resourceid', models.CharField(max_length=40)),
                ('badge_access_url', models.URLField(blank=True, null=True)),
                ('badge_access_url_label', models.CharField(blank=True, max_length=50, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.badge')),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.roadmap')),
            ],
            options={
                'unique_together': {('info_resourceid', 'roadmap', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='Roadmap_Badge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence_no', models.IntegerField()),
                ('required', models.BooleanField(default=False)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roadmap_set', related_query_name='roadmap', to='integration_badges.badge')),
                ('roadmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_set', related_query_name='badge_ref', to='integration_badges.roadmap')),
            ],
            options={
                'unique_together': {('roadmap', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='Badge_Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence_no', models.IntegerField()),
                ('required', models.BooleanField(default=False)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_tasks', to='integration_badges.badge')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration_badges.task')),
            ],
            options={
                'unique_together': {('badge', 'task')},
            },
        ),
    ]
